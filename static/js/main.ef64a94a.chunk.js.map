{"version":3,"sources":["store/actions/penActions.js","components/Panel/Thickness.jsx","components/Panel/ColorPicker.jsx","components/Panel/ClearButton.js","store/actions/canvasActions.js","modules/Vector2.js","components/Panel/DownloadButton.jsx","modules/PenTypeConsts.js","components/Panel/Pipette.jsx","components/Panel/Pen.jsx","components/Panel/Eraser.jsx","components/Panel/UploadButton.jsx","components/Panel/FloodFill.jsx","components/Panel/Selection.jsx","store/actions/modalStorageActions.js","modules/Tools.js","components/Panel/Storage/ImageCard.jsx","components/Panel/Storage/StorageModal.jsx","components/Panel/Storage.jsx","components/Panel/Storage/SaveToStorage.jsx","store/actions/infoModalActions.js","components/InfoBox.jsx","components/Panel/InfoBoxModal.jsx","components/Panel.jsx","components/Canvas.jsx","components/DisplayError.jsx","components/App.js","serviceWorker.js","store/data/penProperty.js","store/data/canvasState.js","store/data/storageModal.js","store/data/infoModal.js","rootReducer.js","store/reducers/penProperty.js","store/reducers/canvasStateReducer.js","store/reducers/modalStorageReducer.js","store/reducers/infoModalReducer.js","index.js"],"names":["changeColor","value","type","payload","changeThickness","changePipetteColor","connect","state","thickness","penProperty","dispatch","bindActionCreators","_ref","react_default","a","createElement","className","onChange","e","target","color","htmlFor","id","ColorPicker_this","props","ClearButton","handleClick","ctx","_this","rect","canvas","width","height","fillStyle","fill","uk-tooltip","onClick","this","bind","Component","canvasState","setContext","changePenType","changeIsSelecting","resetCanvasActions","resetSelectedObject","updateSelectedObject","Vector2","x","y","Object","classCallCheck","Array","isArray","console","log","TypeError","Error","Number","_thisX","_thisY","isFinite","createClass","key","arguments","length","undefined","VectorStart","VectorEnd","DownloadButton","link","React","createRef","isSelecting","current","href","document","querySelector","toDataURL","selectedObject","getContext","size","getBoxSize","startVector","endVector","Math","abs","getImageData","imageDate","putImageData","remove","download","UIkit","notification","message","concat","pos","timeout","ref","downloadCanvasAsImg","pencil","pipette","eraser","paintBucket","none","UploadButton","persist","window","File","FileReader","FileList","Blob","alert","confirm","files","file","reader","onload","_ref2","result","Image","dataUri","image","innerHeight","innerWidth","drawImage","src","onerror","error","code","readAsDataURL","uploadImgAsCanvas","Selection","enableModal","disableModal","reRenderModal","hexToRGB","hex","r","parseInt","slice","g","b","floodFillImageData","imageData","startPoint","backgroundColor","pixel","red","green","blue","stack","pop","pointColor","data","push","sortByDateNewOld","elem1","elem2","regexDate","key1","keys","next","key2","date1","match","sortByDateOldNew","getStorageElemsMap","arr","i","localStorage","map","Map","item","getItem","set","chkObjForNonEmptiness","object","entries","constructor","ImageCard","showEditForm","editInput","onCanvas","finishEditName","stringKey","date","removeItem","replace","setItem","setState","deleteImg","headerClick","prevState","disableEditForm","_this$props","imgData","info","string","name","String","Date","parseKey","hidden","alt","defaultValue","PureComponent","StorageModal","sortBy","clearHandle","clear","forceUpdate","handleChange","event","autosaveControlClick","str","autosave","docCookies","JSON","parse","toString","downloadAllImg","list","regexName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","elem","values","click","err","return","_this2","listMap","sort","Storage_ImageCard","floor","random","isOpen","modalStorage","reRender","Modal","setAppElement","style","display","lib_default","contentLabel","Storage_StorageModal","SaveToStorage","now","imgSize","saveImg","context","enableInfoModal","disableInfoModal","infoModal","uk-overlay-icon","components_InfoBox","penType","uk-navbar","Panel_ColorPicker","Panel_Thickness","Panel_Pen","Panel_Pipette","Panel_Eraser","Panel_FloodFill","Panel_Selection","Panel_ClearButton","Panel_DownloadButton","Panel_UploadButton","Storage_SaveToStorage","Storage","Panel_InfoBoxModal","Canvas","isDrawing","lastX","lastY","selectStartX","selectStartY","beforeImageData","selectStart","getCanvas","getCanvasContext","getCursor","cursor","pipetteColor","top","pageY","left","pageX","draw","_this$props2","lineWidth","beginPath","setLineDash","strokeStyle","moveTo","lineTo","nativeEvent","offsetX","offsetY","stroke","pickColor","join","floodFill","onClickHandle","selectingDraw","_this$state","lineDashOffset","strokeRect","onMouseMoveEvent","onMouseDownEvent","_this$props3","_this$state2","onMouseUpEvent","selectObject","onMouseOutEvent","clientHeight","lineJoin","lineCap","resetCanvas","onMouseMove","onMouseDown","onMouseUp","onMouseOut","DisplayError","uk-grid","App","onUnload","hasItem","addEventListener","removeEventListener","app","components_DisplayError","components_Panel","components_Canvas","Boolean","location","hostname","storageModal","rootReducer","combineReducers","action","objectSpread","assign","store","createStore","compose","applyMiddleware","thunk","devToolsEnhancer","ReactDOM","render","es","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef64a94a.chunk.js","sourcesContent":["export const changeColor = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_COLOR',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changeThickness = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_THICKNESS',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changePipetteColor = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_PIPETTE_COLOR',\r\n\t\tpayload: value\r\n\t}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changeThickness }  from './../../store/actions/penActions';\r\n\r\nconst Thickness = ({changeThickness}) =>  (\r\n\t<div>\r\n\t\t<label>Толщина шрифта:\r\n\t\t\t<select \r\n\t\t\t\t\tclassName=\"uk-select\" \r\n\t\t\t\t\tonChange={e => changeThickness(e.target.value)}\r\n\t\t\t\t>\r\n\t\t\t\t<option value=\"1\">\r\n\t\t\t\t\t1\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"2\">\r\n\t\t\t\t\t2\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"4\">\r\n\t\t\t\t\t4\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"8\">\r\n\t\t\t\t\t8\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"16\">\r\n\t\t\t\t\t16\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"32\">\r\n\t\t\t\t\t32\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"64\">\r\n\t\t\t\t\t64\r\n\t\t\t\t</option>\r\n\t\t\t</select>\r\n\t\t</label>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tthickness: state.penProperty.thickness\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangeThickness: changeThickness\r\n\t}, dispatch);\r\n}\r\n\r\nThickness.propTypes = {\r\n\tthickness: PropTypes.number.isRequired,\r\n\tchangeThickness: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Thickness);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changeColor }  from './../../store/actions/penActions';\r\n\r\nconst ColorPicker = ({ changeColor }) => (\r\n\t<div className=\"uk-flex uk-flex-column\">\r\n\t\t<label htmlFor=\"colorPicker\">Цвет:</label>\r\n\t\t<input \r\n\t\t\ttype=\"color\" \r\n\t\t\tid=\"colorPicker\" \r\n\t\t\tonChange={e => this.props.changeColor(e.target.value)} \r\n\t\t/>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangeColor: changeColor\r\n\t}, dispatch);\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string.isRequired,\r\n\tchangeColor: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ClearButton extends Component {\r\n\thandleClick = () => {\r\n\t\tlet { ctx } = this.props;\r\n\t\tctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\t\tctx.fillStyle = '#ffffff';\r\n\t\tctx.fill();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span\r\n\t\t\t\t\tuk-tooltip=\"Очистить холст\"\r\n\t\t\t\t\tid=\"clearButton\" \r\n\t\t\t\t\tclassName=\"uk-icon-link uk-icon-button trash\" \r\n\t\t\t\t\tonClick={this.handleClick.bind(this)}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx\r\n\t}\r\n}\r\n\r\nClearButton.propTypes = {\r\n\tctx: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps)(ClearButton);","export const setContext = value => {\r\n\treturn {\r\n\t\ttype: 'SET_CONTEXT',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changePenType = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_PEN_TYPE',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changeIsSelecting = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_IS_SELECTING',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const resetCanvasActions = value => {\r\n\treturn {\r\n\t\ttype: 'RESET_CANVAS',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const resetSelectedObject = () => {\r\n\treturn {\r\n\t\ttype: 'RESET_SELECT_OBJECT'\r\n\t}\r\n}\r\n\r\nexport const updateSelectedObject = value => {\r\n\treturn {\r\n\t\ttype: 'UPDATE_SELECTED_OBJECT',\r\n\t\tpayload: value\r\n\t}\r\n}","export class Vector2 {\r\n\tconstructor(x, y) {\r\n\t\tif (Array.isArray(x) || Array.isArray(y)) {\r\n\t\t\tconsole.log(new TypeError('Bad args, x or y is array, x: ' + x + ' y: ' + y));\r\n\t\t\treturn new Error('Bad args === bad vector2');\r\n\t\t}\r\n\r\n\t\tconst [_thisX, _thisY] = [Number(x), Number(y)];\r\n\r\n\t\tif (Number.isFinite(_thisX) && Number.isFinite(_thisY)) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t} else {\r\n\t\t\tconsole.log(new TypeError('Bad args, x or y isn\\'t finite, x: ' + x + ' y: ' + y));\r\n\t\t\treturn new Error('Bad args === bad vector2');\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getBoxSize(VectorStart, VectorEnd) {\r\n\t\t\treturn {\r\n\t\t\t\twidth: VectorEnd.x - VectorStart.x,\r\n\t\t\t\theight: VectorEnd.y - VectorStart.y\r\n\t\t\t}\r\n\t}\r\n\r\n\tupdateVector2(x = this.x, y = this.y) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { \r\n\tresetCanvasActions, \r\n\tresetSelectedObject \r\n}  from './../../store/actions/canvasActions';\r\n\r\nimport { Vector2 } from './../../modules/Vector2';\r\nimport UIkit from 'uikit';\r\n\r\nclass DownloadButton extends Component {\r\n\tlink = React.createRef()\r\n\r\n\tasync downloadCanvasAsImg(e) {\r\n\t\tlet { \r\n\t\t\tisSelecting, \r\n\t\t\tresetSelectedObject,\r\n\t\t\tresetCanvasActions\r\n\t\t} = this.props;\r\n\r\n\t\tlet link = this.link.current;\r\n\t\tif (!isSelecting)\r\n\t\t\tlink.href = document.querySelector('#draw').toDataURL('image/png');\r\n\t\telse if (isSelecting) {\r\n\t\t\tlet { selectedObject } = this.props;\r\n\t\t\tawait resetCanvasActions(true);\r\n\t\t\tlet canvas = document.createElement('canvas');\r\n\t\t\tlet ctx = canvas.getContext('2d');\r\n\r\n\t\t\tlet size = Vector2.getBoxSize(selectedObject.startVector, selectedObject.endVector);\r\n\t\t\tcanvas.width = Math.abs(size.width);\r\n\t\t\tcanvas.height = Math.abs(size.height);\r\n\t\t\t\r\n\t\t\tlet imageDate = await this.props.ctx.getImageData(\r\n\t\t\t\tselectedObject.startVector.x,\r\n\t\t\t\tselectedObject.startVector.y,\r\n\t\t\t\tsize.width,\r\n\t\t\t\tsize.height\r\n\t\t\t);\r\n\r\n\t\t\tctx.putImageData(imageDate, 0, 0);\r\n\t\t\tlink.href = canvas.toDataURL('image/png');\r\n\t\t\tresetSelectedObject();\r\n\t\t\tcanvas.remove();\r\n\t\t}\r\n\t\tlink.download = 'canvasImage.png';\r\n\t\tUIkit.notification({\r\n\t\t\tmessage: `${\r\n\t\t\t\tisSelecting ? \r\n\t\t\t\t\"Фрагмент был сохранён на компьютер\"\r\n\t\t\t\t: \"Холст был сохранён на компьютер\"\r\n\t\t\t}`,\r\n\t\t\tpos: 'bottom-right',\r\n\t\t\ttimeout: 2500\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<a\r\n\t\t\t\t\tuk-tooltip=\"Скачать холст\"\r\n\t\t\t\t\thref=\"canvasDownload\"\r\n\t\t\t\t\tref={this.link}\r\n\t\t\t\t\tid=\"saveButton\" \r\n\t\t\t\t\tclassName=\"uk-icon-link uk-icon-button download\"\r\n\t\t\t\t\tonClick={this.downloadCanvasAsImg.bind(this)}\r\n\t\t\t\t> </a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx,\r\n\t\tisSelecting: state.canvasState.isSelecting,\r\n\t\tselectedObject: state.canvasState.selectedObject\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tresetCanvasActions: resetCanvasActions,\r\n\t\tresetSelectedObject: resetSelectedObject\r\n\t}, dispatch);\r\n}\r\n\r\nDownloadButton.propTypes = {\r\n\tctx: PropTypes.object.isRequired,\r\n\tisSelecting: PropTypes.bool.isRequired,\r\n\tselectedObject: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadButton);","export const pencil = 'pencil';\r\nexport const pipette = 'pipette';\r\nexport const eraser = 'eraser';\r\nexport const paintBucket = 'paint-bucket';\r\nexport const none = 'none';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nimport { pipette } from './../../modules/PenTypeConsts';\r\n\r\nconst Pipette = ({ changePenType }) => (\r\n\t<div className=\"uk-margin-small-top\">\r\n\t\t<span\r\n\t\t\tuk-tooltip=\"Пипетка\"\r\n\t\t\tclassName=\"uk-icon uk-icon-button uk-icon-image pipette\" \r\n\t\t\tonClick={() => changePenType(pipette)}\r\n\t\t></span>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nPipette.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired,\r\n\tctx: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pipette);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nimport { pencil } from './../../modules/PenTypeConsts';\r\n\r\nconst Pen = ({ changePenType }) => (\r\n\t<div className=\"uk-margin-small-top\">\r\n\t\t<span\r\n\t\t\tuk-tooltip=\"Ручка\"\r\n\t\t\tclassName=\"uk-icon uk-icon-button pencil\" \r\n\t\t\tonClick={() => changePenType(pencil)}\r\n\t\t></span>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nPen.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired,\r\n\tctx: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pen);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nimport { eraser } from './../../modules/PenTypeConsts';\r\n\r\nconst Eraser = ({ changePenType }) => (\r\n\t<div className=\"uk-margin-small-top\">\r\n\t\t<span\r\n\t\t\tuk-tooltip=\"Ластик\"\r\n\t\t\tclassName=\"uk-icon uk-icon-button uk-icon-image eraser\" \r\n\t\t\tonClick={() => changePenType(eraser)}\r\n\t\t></span>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nEraser.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired,\r\n\tctx: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Eraser);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport UIkit from 'uikit';\r\n\r\nclass UploadButton extends Component {\r\n\tasync uploadImgAsCanvas(e) {\r\n\t\te.persist()\r\n\t\tif(!window.File || !window.FileReader || !window.FileList || !window.Blob){\r\n\t\t\talert(\"Ваш браузер не поддерживает эту функцию :(\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (window.confirm(\"При загрузке фото холст будет очищен, вы уверены?\")) {\r\n\t\t\tlet { ctx } = this.props;\r\n\t\t\tctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\t\t\tctx.fillStyle = '#ffffff';\r\n\t\t\tawait ctx.fill();\r\n\r\n\t\t\tlet [file, reader] = [e.target.files[0], new FileReader()];\r\n\t\t\t\r\n\t\t\treader.onload = e => {\r\n\t\t\t\tlet [dataUri, image] = [e.target.result, new Image()];\r\n\r\n\t\t\t\timage.onload = () => {\r\n\t\t\t\t\tif (image.height <= window.innerHeight && image.width <= window.innerWidth) \r\n\t\t\t\t\t\tctx.drawImage(image, 0, 0);\r\n\r\n\t\t\t\t\telse if (image.height > window.innerHeight) \r\n\t\t\t\t\t\tctx.drawImage(image, 0, 0, image.width, window.innerHeight);\r\n\r\n\t\t\t\t\telse if (image.width > window.innerWidth) \r\n\t\t\t\t\t\tctx.drawImage(image, 0, 0, window.innerWidth, image.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\timage.src = dataUri;\r\n\t\t\t\tUIkit.notification({\r\n\t\t\t\t\tmessage: `Файл был удачно загружен`,\r\n\t\t\t\t\tpos: 'bottom-right',\r\n\t\t\t\t\ttimeout: 2000\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treader.onerror = e => {\r\n\t\t\t\tconsole.log(`Error loading file. Code: ${e.target.error.code}`);\r\n\t\t\t\tUIkit.notification({\r\n\t\t\t\t\tmessage: `При загрузке файла произошла ошибка, попробуйте снова.`,\r\n\t\t\t\t\tpos: 'bottom-right',\r\n\t\t\t\t\ttimeout: 2000\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<label\r\n\t\t\t\t\tuk-tooltip=\"Загрузить фото\"\r\n\t\t\t\t\thtmlFor=\"uploadButton\"\r\n\t\t\t\t\tclassName=\"uk-icon-link uk-icon-button upload\"\r\n\t\t\t\t></label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tid=\"uploadButton\" \r\n\t\t\t\t\tclassName=\"uk-hidden\"\r\n\t\t\t\t\tonChange={this.uploadImgAsCanvas.bind(this)}\r\n\t\t\t\t></input>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx\r\n\t}\r\n}\r\n\r\nUploadButton.propTypes = {\r\n\tctx: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadButton);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nimport { paintBucket } from './../../modules/PenTypeConsts';\r\n\r\nconst FloodFill  = ({ changePenType }) => (\r\n\t<div className=\"uk-margin-small-top\">\r\n\t\t<span\r\n\t\t\tuk-tooltip=\"Заливка цветом\"\r\n\t\t\tclassName=\"uk-icon uk-icon-button paint-bucket\" \r\n\t\t\tonClick={() => changePenType(paintBucket)}\r\n\t\t></span>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nFloodFill.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired,\r\n\tctx: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FloodFill);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changeIsSelecting, resetCanvasActions }  from './../../store/actions/canvasActions';\r\n\r\nclass Selection extends Component {\r\n\thandleClick = () => {\r\n\t\tthis.props.changeIsSelecting(true)\r\n\t\tif (this.props.isSelecting) \r\n\t\t\tthis.props.resetCanvasActions(true)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span\r\n\t\t\t\t\tuk-tooltip=\"Выделение области\"\r\n\t\t\t\t\tclassName=\"uk-icon uk-icon-button uk-icon-image selection\" \r\n\t\t\t\t\tonClick={this.handleClick.bind(this)}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t\tisSelecting: state.canvasState.isSelecting\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangeIsSelecting: changeIsSelecting,\r\n\t\tresetCanvasActions: resetCanvasActions\r\n\t}, dispatch);\r\n}\r\n\r\nSelection.propTypes = {\r\n\tcolor: PropTypes.string.isRequired,\r\n\tisSelecting: PropTypes.bool.isRequired,\r\n\tchangeIsSelecting: PropTypes.func.isRequired,\r\n\tresetCanvasActions: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);","export const enableModal = () => {\r\n\treturn {\r\n\t\ttype: 'ENABLE_MODAL'\r\n\t}\r\n}\r\n\r\nexport const disableModal = () => {\r\n\treturn {\r\n\t\ttype: 'DISABLE_MODAL'\r\n\t}\r\n}\r\n\r\nexport const reRenderModal = () => {\r\n\treturn {\r\n\t\ttype: 'RE_RENDER_MODAL'\r\n\t}\r\n}","export const hexToRGB = hex => {\r\n\treturn {\r\n\t\tr: Number.parseInt(hex.slice(1, 3), 16),\r\n\t\tg: Number.parseInt(hex.slice(3, 5), 16),\r\n\t\tb: Number.parseInt(hex.slice(5, 7), 16),\r\n\t}\r\n}\r\n\r\nexport const floodFillImageData = (imageData, color, startPoint, backgroundColor) => {\r\n\tlet [width, height] = [imageData.width, imageData.height];\r\n\tlet pixel;\r\n\tlet red, green, blue = 0;\r\n\r\n\tlet stack = [[startPoint.x, startPoint.y]];\r\n\r\n\r\n\twhile (stack.length > 0) {   \r\n\t\tpixel = stack.pop();\r\n\r\n\t\tif (pixel[0] < 0 || pixel[0] >= width) continue;\r\n\t\tif (pixel[1] < 0 || pixel[1] >= height) continue;\r\n\t\t\t\t\r\n\t\tred = pixel[1] * 4 * width + pixel[0] * 4;\r\n\t\tgreen = red + 1;\r\n\t\tblue = green + 1;\r\n\t\tconst pointColor = {\r\n\t\t\tr: imageData.data[red],\r\n\t\t\tg: imageData.data[green],\r\n\t\t\tb: imageData.data[blue]\r\n\t\t}\r\n\r\n\t\tif ((pointColor.r !== color.r || pointColor.g !== color.g || pointColor.b !== color.b)\r\n\t\t\t&& (pointColor.r === backgroundColor.r && pointColor.g === backgroundColor.g && pointColor.b === backgroundColor.b)) {\r\n\t\t\timageData.data[red] = color.r;\r\n\t\t\timageData.data[green] = color.g;\r\n\t\t\timageData.data[blue] = color.b;\r\n\t\t\t\r\n\t\t\tstack.push([\r\n\t\t\t\tpixel[0] - 1,\r\n\t\t\t\tpixel[1]\r\n\t\t\t  ]);\r\n\t\t\tstack.push([\r\n\t\t\t\tpixel[0] + 1,\r\n\t\t\t\tpixel[1]\r\n\t\t\t  ]);\r\n\t\t\tstack.push([\r\n\t\t\t\tpixel[0],\r\n\t\t\t\tpixel[1] - 1\r\n\t\t\t  ]);\r\n\t\t\tstack.push([\r\n\t\t\t\tpixel[0],\r\n\t\t\t\tpixel[1] + 1\r\n\t\t\t]);\r\n\t\t}\r\n  }\r\n  return imageData;\r\n}\r\n\r\n/*export const loadWebAssembly = fileName => {\r\n  return fetch(fileName)\r\n    .then(response => response.arrayBuffer())\r\n    .then(bits => {\r\n    \treturn WebAssembly.compile(bits)\r\n    })\r\n    .then(module => new WebAssembly.Instance(module));\r\n};*/\r\n\r\nexport const sortByDateNewOld = (elem1, elem2) => {\r\n\tlet regexDate = /(?<=Date: )\\d+/g;\r\n\r\n\tlet key1 = elem1.keys().next().value;\r\n\tlet key2 = elem2.keys().next().value;\r\n\r\n\tlet date1 = Number.parseInt(key1.match(regexDate)[0], 10);\r\n\tlet date2 = Number.parseInt(key2.match(regexDate)[0], 10);\r\n\r\n\treturn date2 - date1; // от новых к старым\r\n}\r\n\r\nexport const sortByDateOldNew  = (elem1, elem2) => {\r\n\tlet regexDate = /(?<=Date: )\\d+/g;\r\n\r\n\tlet key1 = elem1.keys().next().value;\r\n\tlet key2 = elem2.keys().next().value;\r\n\r\n\tlet date1 = Number.parseInt(key1.match(regexDate)[0], 10);\r\n\tlet date2 = Number.parseInt(key2.match(regexDate)[0], 10);\r\n\r\n\treturn date1 - date2; // от старых к новым\r\n}\r\n\r\nexport const parseKey = string => {\r\n\tlet regexName = /(?<=Name: ).*(?=Date)/g;\r\n\tlet name = string.match(regexName)[0];\r\n\r\n\tlet regexDate = /(?<=Date: )\\d+/g;\r\n\tlet resultRegexDate = /^.*(?= GMT)/g;\r\n\tlet date = Number.parseInt(string.match(regexDate)[0], 10);\r\n\tdate = String(new Date(date));\r\n\tdate = date.match(resultRegexDate)[0];\r\n\r\n\tlet regexSize = /(?<=Size: ).*$/g;\r\n\tlet size = string.match(regexSize)[0];\r\n\r\n\treturn {\r\n\t\tname: name,\r\n\t\tdate: date,\r\n\t\tsize: size\r\n\t}\r\n}\r\n\r\nexport const getStorageElemsMap = () => {\r\n\tlet arr = [];\r\n\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\tlet map = new Map();\r\n\t\tlet key = localStorage.key(i);\r\n\t\tlet item = localStorage.getItem(key);\r\n\t\tmap.set(key, item);\r\n\t\tarr.push(map);\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\n/*export const autosaveImg = ctx => {\r\n\tlet key = `autosave: ${sessionStorage.length}`;\r\n\tlet data = ctx.canvas.toDataURL('image/png');\r\n\r\n\tsessionStorage.setItem(key, data);\r\n}*/\r\n\r\nexport const chkObjForEmptiness = object => (Object.entries(object).length === 0 && object.constructor === Object) ? true : false;\r\nexport const chkObjForNonEmptiness = object => !(Object.entries(object).length === 0 && object.constructor === Object) ? true : false;","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n\treRenderModal, \r\n\tdisableModal \r\n}  from './../../../store/actions/modalStorageActions';\r\n\r\nimport { parseKey } from './../../../modules/Tools';\r\n\r\nclass ImageCard extends PureComponent {\r\n\tstate = {\r\n\t\tshowEditForm: false\r\n\t}\r\n\r\n\teditInput = React.createRef()\r\n\timage = React.createRef()\r\n\r\n\tonCanvas = () => {\r\n\t\tthis.props.ctx.drawImage(this.image.current, 0, 0);\r\n\t\tthis.props.disableModal();\r\n\t}\r\n\r\n\tfinishEditName = e => {\r\n\t\tlet { stringKey } = this.props;\r\n\t\tlet date = localStorage.getItem(stringKey);\r\n\r\n\t\tlocalStorage.removeItem(stringKey);\r\n\r\n\t\tlet regexName = /(?<=Name: ).*(?=Date)/g;\r\n\t\tstringKey = stringKey.replace(regexName, this.editInput.current.value);\r\n\r\n\t\tlocalStorage.setItem(stringKey, date);\r\n\t\tthis.setState({\r\n\t\t\tshowEditForm: false\r\n\t\t}, this.props.reRenderModal());\r\n\t}\r\n\r\n\tdeleteImg = e => {\r\n\t\tlocalStorage.removeItem(this.props.stringKey);\r\n\t\tthis.props.reRenderModal();\r\n\t}\r\n\r\n\theaderClick = e => {\r\n\t\tthis.setState((prevState, props) => {\r\n\t\t\treturn {\r\n\t\t\t\tshowEditForm: !prevState.showEditForm \r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdisableEditForm = () => this.setState({ showEditForm: false })\r\n\r\n\trender() {\r\n\t\tlet { stringKey, imgData } = this.props;\r\n\t\tlet { showEditForm } = this.state;\r\n\t\tlet info = parseKey(stringKey);\r\n\t\tlet hidden = !showEditForm ? \"uk-hidden\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-bottom uk-margin-left uk-card uk-width-medium uk-card-default uk-flex uk-flex-column uk-flex-between\">\r\n\t\t\t\t<div className=\"uk-flex uk-flex-column uk-flex-between uk-flex-1\">\r\n\t\t\t\t\t<div className=\"uk-card-media-top uk-card-header\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"image-border\"\r\n\t\t\t\t\t\tsrc={imgData}\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tref={this.image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"uk-card-body padding\">\r\n\t\t\t\t\t\t<h4 \r\n\t\t\t\t\t\t\tclassName=\"uk-card-title uk-heading-bullet\"\r\n\t\t\t\t\t\t\tonClick={this.headerClick.bind(this)}\r\n\t\t\t\t\t\t>{info.name}</h4>\r\n\t\t\t\t\t\t<div id=\"editBox\" className={`${hidden} uk-margin-small-bottom`}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tclassName=\"uk-input uk-form-width-small uk-form-small\" \r\n\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\tdefaultValue={info.name} \r\n\t\t\t\t\t\t\t\tref={this.editInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"uk-button-group\">\r\n\t\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\t\tclassName=\"uk-icon uk-margin-small-left uk-icon-button check\" \r\n\t\t\t\t\t\t\t\tonClick={this.finishEditName.bind(this)}\r\n\t\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\t\tclassName=\"uk-icon uk-margin-small-left uk-icon-button close\" \r\n\t\t\t\t\t\t\t\tonClick={this.disableEditForm.bind(this)}\r\n\t\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span>Дата создания файла: <br/>{info.date}</span>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<span>Размеры: {info.size}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"uk-button-group uk-width-1-1\">\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"uk-button uk-button-primary uk-width-1-2\"\r\n\t\t\t\t\t\tonClick={this.onCanvas.bind(this)}\r\n\t\t\t\t\t>На холст</button>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"uk-button uk-button-danger uk-width-1-2\"\r\n\t\t\t\t\t\tonClick={this.deleteImg.bind(this)}\r\n\t\t\t\t\t>Удалить</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div> \r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\treRenderModal: reRenderModal,\r\n\t\tdisableModal: disableModal\r\n\t}, dispatch);\r\n}\r\n\r\nImageCard.propTypes = {\r\n\tctx: PropTypes.object.isRequired,\r\n\treRenderModal: PropTypes.func.isRequired,\r\n\tdisableModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCard);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport docCookies from 'doc-cookies';\r\n\r\nimport { \r\n\tenableModal, \r\n\tdisableModal\r\n}  from './../../../store/actions/modalStorageActions';\r\n\r\nimport UIkit from 'uikit';\r\nimport ImageCard from './ImageCard';\r\nimport { \r\n\tsortByDateNewOld, \r\n\tsortByDateOldNew,\r\n\tgetStorageElemsMap\r\n} from './../../../modules/Tools';\r\n\r\nclass StorageModal extends Component {\r\n\tstate = {\r\n\t\tsortBy: 'По дате(от новых к старым)'\r\n\t}\r\n\r\n\tclearHandle = () => {\r\n\t\tif (localStorage.length !== 0) {\r\n\t\t\tlocalStorage.clear();\r\n\t\t\tUIkit.notification({\r\n\t\t\t\tmessage: 'Хранилище было очищено.',\r\n\t\t\t\tpos: 'bottom-right',\r\n\t\t\t\ttimeout: 2500\r\n\t\t\t});\r\n\t\t\tthis.forceUpdate();\r\n\t\t} else \r\n\t\t\tUIkit.notification({\r\n\t\t\t\tmessage: 'Хранилище пустое!',\r\n\t\t\t\tpos: 'bottom-right',\r\n\t\t\t\ttimeout: 2500\r\n\t\t\t});\r\n\t}\r\n\r\n\thandleChange = event => this.setState({ sortBy: event.target.value })\r\n\r\n\tautosaveControlClick = () => {\r\n\t\tlet str = \"autosaveEnable\";\r\n\t\tlet autosave = docCookies.getItem(str);\r\n\t\tif(autosave !== null) {\r\n\t\t\tdocCookies.setItem(str, (!JSON.parse(autosave)).toString());\r\n\t\t\tthis.forceUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\tdownloadAllImg = () => {\r\n\t\tlet list = getStorageElemsMap();\r\n\t\tif(list.length === 0) {\r\n\t\t\tUIkit.notification({\r\n\t\t\t\tmessage: 'Хранилище пустое!',\r\n\t\t\t\tpos: 'bottom-right',\r\n\t\t\t\ttimeout: 2500\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet link = document.createElement('a');\r\n\t\tlet regexName = /(?<=Name: ).*(?=Date)/g;\r\n\r\n\t\tfor(let elem of list) {\r\n\t\t\t\r\n\t\t\tlet key = elem.keys().next().value\r\n\t\t\tlet name = key.match(regexName)[0];\r\n\t\t\tlink.download = `${name}.png`;\r\n\t\t\tlink.href = elem.values().next().value;\r\n\t\t\tlink.click();\r\n\t\t}\r\n\t\tlink.remove();\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet listMap = getStorageElemsMap();\r\n\t\tlet { sortBy } = this.state;\r\n\t\tif (sortBy === 'По дате(от новых к старым)') \r\n\t\t\tlistMap = listMap.sort(sortByDateNewOld);\r\n\t\telse if(sortBy === 'По дате(от старых к новым)')\r\n\t\t\tlistMap = listMap.sort(sortByDateOldNew);\r\n\r\n\t\tlet list = listMap.map(item => (\r\n\t\t\t<ImageCard\r\n\t\t\t\tkey={Math.floor(Math.random() * 100000000)}\r\n\t\t\t\tstringKey={item.keys().next().value}\r\n\t\t\t\timgData={item.values().next().value}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\t\tconst autosave = JSON.parse(docCookies.getItem(\"autosaveEnable\"));\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-flex uk-flex-column uk-flex-between uk-height-1-1\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2 className=\"uk-heading-line uk-text-center\">\r\n\t\t\t\t\t\t<span>Сохранённые изображения</span>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<h4>На данный момент сохранено {localStorage.length} {`${localStorage.length === 1 ? 'изображение' : 'изображений' }`}.</h4>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<fieldset className=\"uk-fieldset\">\r\n\t\t\t\t\t\t\t<legend className=\"uk-legend\">Сортировать: </legend>\r\n\t\t\t\t\t\t\t<div className=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tclassName=\"uk-select uk-width-medium\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.sortBy}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value=\"По дате(от новых к старым)\">По дате(от новых к старым)</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"По дате(от старых к новым)\">По дате(от старых к новым)</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"uk-padding uk-flex uk-flex-around uk-flex-row uk-flex-wrap uk-flex-wrap-stretch uk-flex-top\">\r\n\t\t\t\t\t{list}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"uk-flex uk-flex-around uk-button-group\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={this.downloadAllImg.bind(this)}\r\n\t\t\t\t\t\t\tclassName=\"uk-button uk-margin-right uk-margin-bottom uk-button-default\"\r\n\t\t\t\t\t\t>Скачать всё</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={this.autosaveControlClick.bind(this)}\r\n\t\t\t\t\t\t\tclassName=\"uk-button uk-margin-left uk-margin-bottom uk-button-secondary\"\r\n\t\t\t\t\t\t>{`${autosave ? \"Выключить\" : \"Включить\"} автосохранение`}</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={this.clearHandle.bind(this)}\r\n\t\t\t\t\t\t\tclassName=\"uk-button uk-margin-left uk-margin-bottom uk-button-danger\"\r\n\t\t\t\t\t\t>Удалить всё</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => this.props.disableModal()}\r\n\t\t\t\t\t\t\tclassName=\"uk-button uk-margin-left uk-margin-bottom uk-button-primary\"\r\n\t\t\t\t\t\t>Закрыть</button>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisOpen: state.modalStorage.isOpen,\r\n\t\treRender: state.modalStorage.reRender,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tenableModal: enableModal,\r\n\t\tdisableModal: disableModal,\r\n\t}, dispatch);\r\n}\r\n\r\nStorageModal.propTypes = {\r\n\tisOpen: PropTypes.bool.isRequired,\r\n\treRender: PropTypes.number.isRequired,\r\n\tenableModal: PropTypes.func.isRequired,\r\n\tdisableModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StorageModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { enableModal }  from './../../store/actions/modalStorageActions';\r\n\r\nimport Modal from 'react-modal';\r\nimport StorageModal from './Storage/StorageModal';\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ShowStorage = ({ isOpen, enableModal }) => {\r\n\tconst clickHandle = () => {\r\n\t\tdocument.querySelector('.cursor').style.display = 'none';\r\n\t\tenableModal();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t<span\r\n\t\t\t\tuk-tooltip=\"Открыть хранилище\"\r\n\t\t\t\tclassName=\"uk-icon uk-icon-button storage\"\r\n\t\t\t\tonClick={() => clickHandle()}\r\n\t\t\t></span>\r\n\t\t\t<Modal\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\tcontentLabel=\"Show storage Modal\"\r\n\t\t\t>\r\n\t\t\t\t<StorageModal />\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisOpen: state.modalStorage.isOpen\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tenableModal: enableModal\r\n\t}, dispatch);\r\n}\r\n\r\nShowStorage.propTypes = {\r\n\tisOpen: PropTypes.bool.isRequired, \r\n\tenableModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowStorage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport UIkit from 'uikit';\r\nimport { bindActionCreators } from 'redux';\r\nimport { resetCanvasActions }  from './../../../store/actions/canvasActions';\r\nimport { Vector2 } from './../../../modules/Vector2';\r\n\r\nclass SaveToStorage extends Component {\r\n\tasync handleClick() {\r\n\t\tlet { ctx, isSelecting } = this.props;\r\n\t\tlet saveImg;\r\n\t\tlet name = `Name: Рисунок №${localStorage.length + 1}`;\r\n\t\tlet date = `Date: ${Date.now()}`;\r\n\t\tlet key, imgSize;\r\n\r\n\t\tif (!isSelecting) {\r\n\t\t\timgSize = `Size: ${ctx.canvas.width} x ${ctx.canvas.height}`;\r\n\t\t\tsaveImg = ctx.canvas.toDataURL('image/png');\r\n\t\t} else {\r\n\t\t\tlet { selectedObject } = this.props;\r\n\t\t\tawait this.props.resetCanvasActions(true);\r\n\t\t\tlet canvas = document.createElement('canvas');\r\n\t\t\tlet context = canvas.getContext('2d');\r\n\r\n\t\t\tlet size = Vector2.getBoxSize(selectedObject.startVector, selectedObject.endVector);\r\n\t\t\timgSize = `Size: ${Math.abs(size.width)} x ${Math.abs(size.height)}`;\r\n\t\t\tcanvas.width = Math.abs(size.width);\r\n\t\t\tcanvas.height = Math.abs(size.height);\r\n\r\n\t\t\tlet imageDate = await ctx.getImageData(\r\n\t\t\t\tselectedObject.startVector.x,\r\n\t\t\t\tselectedObject.startVector.y,\r\n\t\t\t\tsize.width,\r\n\t\t\t\tsize.height\r\n\t\t\t);\r\n\t\t\tcontext.putImageData(imageDate, 0, 0);\r\n\t\t\tsaveImg = canvas.toDataURL('image/png');\r\n\t\t\tcanvas.remove();\r\n\t\t}\r\n\r\n\t\tkey = name + date + imgSize;\r\n\t\ttry {\r\n\t\t\t\tlocalStorage.setItem(`${key}`, saveImg);\r\n\t\t\t\tUIkit.notification({\r\n\t\t\t\t\tmessage: `${isSelecting ? \r\n\t\t\t\t\t\t'Фрагмент был сохранён в хранилище.' \r\n\t\t\t\t\t\t: 'Холст был сохранён в хранилище.'\r\n\t\t\t\t\t}`,\r\n\t\t\t\t\tpos: 'bottom-right',\r\n\t\t\t\t\ttimeout: 2500\r\n\t\t\t\t});\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(\"Storage failed: \" + e);\r\n\t\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span\r\n\t\t\t\t\tuk-tooltip=\"Сохранить в хранилище\"\r\n\t\t\t\t\tclassName=\"uk-icon uk-icon-button cloud-upload\" \r\n\t\t\t\t\tonClick={this.handleClick.bind(this)}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx,\r\n\t\tisSelecting: state.canvasState.isSelecting,\r\n\t\tselectedObject: state.canvasState.selectedObject\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tresetCanvasActions: resetCanvasActions,\r\n\t\t//resetSelectedObject: resetSelectedObject\r\n\t}, dispatch);\r\n}\r\n\r\nSaveToStorage.propTypes = {\r\n\tctx: PropTypes.object.isRequired,\r\n\tresetCanvasActions: PropTypes.func.isRequired,\r\n\tisSelecting: PropTypes.bool.isRequired,\r\n\tselectedObject: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveToStorage);","export const enableInfoModal = () => {\r\n\treturn {\r\n\t\ttype: 'ENABLE_INFO_MODAL'\r\n\t}\r\n}\r\n\r\nexport const disableInfoModal = () => {\r\n\treturn {\r\n\t\ttype: 'DISABLE_INFO_MODAL'\r\n\t}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { disableInfoModal }  from './../store/actions/infoModalActions';\r\n\r\nconst InfoBox = ({ disableInfoModal }) => (\r\n\t<div>\r\n\t\t<div className=\"uk-margin-medium-bottom\">\r\n\t\t\t<h1 className=\"uk-heading-divider uk-flex uk-flex-between uk-margin-small-left uk-margin-small-right\">\r\n\t\t\tКраткая справка:\r\n\t\t\t\t<span \r\n\t\t\t\t\tclassName=\"uk-icon uk-margin-left uk-icon-button close uk-overlay\" uk-overlay-icon=\"true\" \r\n\t\t\t\t\tonClick={() => disableInfoModal()}\r\n\t\t\t\t></span>\r\n\t\t\t</h1>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<ul>\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle pencil\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle \">Ручка. Используется для того, чтобы рисовать линии</span>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle pipette\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Пипетка. Даёт возможность получить цвет в определённой точке холста</span>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle eraser\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Ластик. Ластик используется для очистки произвольного фрагмента</span>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle paint-bucket\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Заливка. Можно использовать для заливки области</span>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle selection\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Выделение. Выделив часть холста можно сохранить её либо на компьютер, либо в хранилище</span>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle trash\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Очищает холст</span>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle download\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Скачивание. Скачивает либо холст, либо фрагмент холста, выделенный с использованием <i>Выделение</i></span>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle upload\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Загрузка. Загружает выбранное изображение(<span className=\"uk-text-warning\">изображене будет сжато, если его размеры будут больше размеров холста</span>)</span>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle cloud-upload\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Сохранение. Сохранение либо холст, либо фрагмент холста, выделенный с использованием <i>Выделение</i> в Хранилище</span>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle storage\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Хранилище. Открывает окно, где храняться сохранённые изображения</span>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-icon uk-icon-button uk-icon-image uk-text-middle info\"></span>\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Справка. Открывает окно с краткой справкой</span>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<h3>Хранилище</h3>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"uk-flex uk-flex-auto uk-margin-small-bottom\">\r\n\t\t\t\t<span className=\"uk-margin-small-left uk-margin-small-top uk-text-middle\">Хранилище - место, куда можно сохранить изображения без скачивания их на компьютер, а также место, куда сохраняются изображения при обновлени/закрытии вкладки. Можно удалить все изображения, скачать их, включить/выключить сохранение изображения при обновлени/закрытии вкладки. Имя изображения можно изменить кликнув на него</span>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisOpen: state.infoModal.isOpen,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tdisableInfoModal: disableInfoModal\r\n\t}, dispatch);\r\n}\r\n\r\nInfoBox.propTypes = {\r\n\tisOpen: PropTypes.bool.isRequired,\r\n\tdisableInfoModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoBox);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { enableInfoModal }  from './../../store/actions/infoModalActions';\r\n\r\nimport Modal from 'react-modal';\r\nimport InfoBox from './../InfoBox';\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst InfoBoxModal = ({ isOpen, enableInfoModal }) => {\r\n\tconst clickHandle = () => {\r\n\t\tdocument.querySelector('.cursor').style.display = 'none';\r\n\t\tenableInfoModal();\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t<span\r\n\t\t\t\tuk-tooltip=\"Помощь\"\r\n\t\t\t\tclassName=\"uk-icon uk-icon-button info\"\r\n\t\t\t\tonClick={() => clickHandle()}\r\n\t\t\t></span>\r\n\t\t\t<Modal\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\tcontentLabel=\"Storage Modal\"\r\n\t\t\t>\r\n\t\t\t\t<InfoBox />\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisOpen: state.infoModal.isOpen,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tenableInfoModal: enableInfoModal\r\n\t}, dispatch);\r\n}\r\n\r\nInfoBoxModal.propTypes = {\r\n\tisOpen: PropTypes.bool,\r\n\tenableInfoModal: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoBoxModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Thickness from './Panel/Thickness';\r\nimport ColorPicker from './Panel/ColorPicker';\r\nimport ClearButton from './Panel/ClearButton';\r\nimport DownloadButton from './Panel/DownloadButton';\r\nimport Pipette from './Panel/Pipette';\r\nimport Pen from './Panel/Pen';\r\nimport Eraser from './Panel/Eraser';\r\nimport UploadButton from './Panel/UploadButton'\r\nimport FloodFill from './Panel/FloodFill';\r\nimport Selection from './Panel/Selection';\r\nimport Storage from './Panel/Storage';\r\nimport SaveToStorage from'./Panel/Storage/SaveToStorage';\r\nimport InfoBoxModal from './Panel/InfoBoxModal';\r\n\r\nconst Panel = ({penType, isSelecting}) => (\r\n\t<div>\r\n\t\t<nav className=\"uk-navbar-container uk-flex uk-flex-center\" uk-navbar=\"true\">\r\n\t\t\t<div className=\"uk-navbar-left\">\r\n\t\t\t\t<ul className=\"uk-navbar-nav uk-flex uk-flex-row uk-flex-middle panel\">\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left uk-margin-right uk-flex uk-flex-middle\">\r\n\t\t\t\t\t\t<ColorPicker />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left uk-margin-medium-right\">\r\n\t\t\t\t\t\t<Thickness />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${penType === 'pencil' && 'active'}`}>\r\n\t\t\t\t\t\t<Pen />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${penType === 'pipette' && 'active'}`}>\r\n\t\t\t\t\t\t<Pipette />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${penType === 'eraser' && 'active'}`}>\r\n\t\t\t\t\t\t<Eraser />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${penType === 'paint-bucket' && 'active'}`}>\r\n\t\t\t\t\t\t<FloodFill />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${isSelecting && 'active'}`}>\r\n\t\t\t\t\t\t<Selection />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left uk-margin-medium-right\">\r\n\t\t\t\t\t\t<ClearButton />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left\">\r\n\t\t\t\t\t\t<DownloadButton />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left\">\r\n\t\t\t\t\t\t<UploadButton />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left\">\r\n\t\t\t\t\t\t<SaveToStorage />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left  uk-margin-medium-right\">\r\n\t\t\t\t\t\t<Storage />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left\">\r\n\t\t\t\t\t\t<InfoBoxModal />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tpenType: state.canvasState.penType,\r\n\t\tisSelecting: state.canvasState.isSelecting\r\n\t}\r\n}\r\n\r\nPanel.propTypes = {\r\n\tpenType: PropTypes.string.isRequired,\r\n\tisSelecting: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps)(Panel);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { \r\n\tsetContext, \r\n\tchangeIsSelecting, \r\n\tupdateSelectedObject, \r\n\tresetCanvasActions,\r\n\tresetSelectedObject\r\n} from './../store/actions/canvasActions';\r\n\r\nimport {\r\n\tpencil,\r\n\tpipette,\r\n\teraser,\r\n\tpaintBucket,\r\n\tnone\r\n} from './../modules/PenTypeConsts';\r\n\r\nimport { \r\n\tchangeColor, \r\n\tchangePipetteColor\r\n} from './../store/actions/penActions';\r\n\r\nimport { \r\n\thexToRGB,\r\n\tfloodFillImageData,\r\n\t/*chkObjForEmptiness,*/\r\n\tchkObjForNonEmptiness,\r\n\t/*loadWebAssembly*/ \r\n} from './../modules/Tools';\r\n\r\nimport { Vector2 } from './../modules/Vector2';\r\n\r\nclass Canvas extends Component {\r\n\tstate = {\r\n\t\tisDrawing: false,\r\n\t\tlastX: 0,\r\n\t\tlastY: 0,\r\n\t\tselectStartX: undefined,\r\n\t\tselectStartY: undefined,\r\n\t\tbeforeImageData: undefined,\r\n\t\tselectStart: false\r\n\t};\r\n\r\n\tcanvas = React.createRef();\r\n\r\n\tgetCanvas = () => this.canvas.current;\r\n\tgetCanvasContext = () => this.getCanvas().getContext('2d');\r\n\tgetCursor = () => document.querySelector('.cursor');\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst canvas = this.getCanvas();\r\n\t\tconst ctx = this.getCanvasContext();\r\n\r\n\t\tthis.props.setContext(ctx);\r\n\r\n\t\tcanvas.width = window.innerWidth;\r\n\t\tcanvas.height = window.innerHeight - document.querySelector('.uk-navbar-container').clientHeight;\r\n\r\n\t\tthis.setState({\r\n\t\t\tbeforeImageData: ctx.getImageData(0, 0, canvas.width, canvas.height)\r\n\t\t});\r\n\r\n\t\tctx.strokeStyle = this.props.color;\r\n\t\tctx.lineJoin = \"round\";\r\n\t\tctx.lineCap = \"round\";\r\n\t\tctx.lineWidth = this.props.thickness;\r\n\t\tctx.rect(0, 0, canvas.width, canvas.height);\r\n\t\tctx.fillStyle = '#ffffff';\r\n\t\tctx.fill();\r\n\t}\r\n\r\n\tcursor = e => {\r\n\t\tconst cursor = this.getCursor();\r\n\r\n\t\tlet { \r\n\t\t\tpenType, \r\n\t\t\tthickness, \r\n\t\t\tpipetteColor, \r\n\t\t\tcolor \r\n\t\t} = this.props;\r\n\r\n\t\tif (penType !== none) {\r\n\t\t\tcursor.style.display = 'block';\r\n\t\t\tcursor.style.width = `${thickness + 5}px`;\r\n\t\t\tcursor.style.height = `${thickness + 5}px`;\r\n\t\r\n\t\t\tcursor.style.top = `${e.pageY - Number.parseInt(cursor.style.height)/2}px`;\r\n\t\t\tcursor.style.left = `${e.pageX - Number.parseInt(cursor.style.width)/2}px`;\r\n\t\r\n\t\t\tif (penType === pencil || penType === paintBucket) \r\n\t\t\t\tcursor.style.backgroundColor  = `${color}`;\r\n\t\t\telse if (penType === pipette) \r\n\t\t\t\tcursor.style.backgroundColor  = `${pipetteColor}`;\r\n\t\t\telse if (penType === eraser) \r\n\t\t\t\tcursor.style.backgroundColor = '#ffffff';\r\n\r\n\t\t} else {\r\n\t\t\tcursor.style.display = 'none';\r\n\t\t}\r\n\t};\r\n\r\n\tdraw = e => {\r\n\t\tthis.cursor(e);\r\n\t\tlet  {\r\n\t\t\tctx, penType, \r\n\t\t\tthickness, color,\r\n\t\t\tpipetteColor \t\r\n\t\t} =  this.props;\r\n\r\n\t\tctx.lineWidth = thickness;\r\n\t\tif (this.state.isDrawing && penType !== paintBucket) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.setLineDash([0]);\r\n\r\n\t\t\tif (penType === pencil)\r\n\t\t\t\tctx.strokeStyle = color;\r\n\t\t\telse if (penType === pipette)\r\n\t\t\t\tctx.strokeStyle = pipetteColor;\r\n\t\t\telse if (penType === eraser)\r\n\t\t\t\tctx.strokeStyle = '#ffffff';\r\n\r\n\t\t\tctx.moveTo(this.state.lastX, this.state.lastY);\r\n\t\t\tctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n\t\t\tctx.stroke();\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tlastX: e.nativeEvent.offsetX,\r\n\t\t\t\tlastY: e.nativeEvent.offsetY\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tpickColor = e => {\r\n\t\tconst [x, y] = [e.nativeEvent.offsetX, e.nativeEvent.offsetY];\r\n\t\tconst imgData = this.props.ctx.getImageData(x, y, 1, 1);\r\n\t\tconst pixel = imgData.data;\r\n\t\tthis.props.changePipetteColor(`rgba(${pixel.join(',')})`);\r\n\t};\r\n\r\n\tfloodFill = e => {\r\n\t\tlet color = hexToRGB(this.props.color);\r\n\t\tlet imageData = this.props.ctx.getImageData(0, 0, this.getCanvas().width, this.getCanvas().height);\r\n\t\tlet startPoint = {\r\n\t\t\tx: e.nativeEvent.offsetX,\r\n\t\t\ty: e.nativeEvent.offsetY\r\n\t\t}\r\n\t\tconst imgData = this.props.ctx.getImageData(startPoint.x, startPoint.y, 1, 1)\r\n\t\tconst backgroundColor = {\r\n\t\t\tr: imgData.data[0],\r\n\t\t\tg: imgData.data[1],\r\n\t\t\tb: imgData.data[2]\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.ctx.putImageData(floodFillImageData(imageData, color, startPoint, backgroundColor), 0, 0);\r\n\t};\r\n\r\n\tonClickHandle = e => {\r\n\t\tif (this.props.penType === pipette) this.pickColor(e);\r\n\t\telse if (this.props.penType === paintBucket) this.floodFill(e);\r\n\t};\r\n\r\n\tselectingDraw = e => {\r\n\t\tthis.cursor(e);\r\n\t\tlet  { ctx } =  this.props;\r\n\t\tlet { \r\n\t\t\tlastX, lastY, \r\n\t\t\tselectStartX, selectStartY,\r\n\t\t\tselectStart,\r\n\t\t\tbeforeImageData\r\n\t\t} = this.state;\r\n\r\n\t\tctx.lineWidth = 1;\r\n\t\tif (selectStart) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tlastX: e.nativeEvent.offsetX,\r\n\t\t\t\tlastY: e.nativeEvent.offsetY\r\n\t\t\t}, () => {\r\n\t\t\t\tlet width = lastX - selectStartX;\r\n\t\t\t\tlet height = lastY - this.state.selectStartY;\r\n\t\t\t\tctx.setLineDash([4, 4]);\r\n\r\n\t\t\t\tctx.lineDashOffset = 0;\r\n\t\t\t\t\tctx.strokeRect(selectStartX, selectStartY, width, height);\r\n\t\t\t\t});\r\n\r\n\t\t\tctx.putImageData(beforeImageData, 0, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseMoveEvent = e => {\r\n\t\tlet canvas = this.getCanvas();\r\n\t\tif (this.props.isSelecting) {\r\n\t\t\tthis.selectingDraw(e);\r\n\t\t\tcanvas.style.cursor = 'crosshair';\r\n\t\t} else {\r\n\t\t\tthis.draw(e);\r\n\t\t\tcanvas.style.cursor = 'none';\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseDownEvent = e => {\r\n\t\tlet  { ctx, isSelecting, selectedObject } =  this.props;\r\n\t\tlet {  \r\n\t\t\tselectStartX, selectStartY,\r\n\t\t\tselectStart, beforeImageData\r\n\t\t} = this.state;\r\n\r\n\t\tif (isSelecting) {\r\n\t\t\tif (chkObjForNonEmptiness(selectedObject)) \r\n\t\t\t\tthis.props.ctx.putImageData(this.state.beforeImageData, 0, 0);\r\n\r\n\t\t\tlet canvas = this.getCanvas();\r\n\t\t\tlet imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tselectStartX: selectStartX === undefined ? e.nativeEvent.offsetX : selectStartX,\r\n\t\t\t\tselectStartY: selectStartY === undefined ? e.nativeEvent.offsetY : selectStartY,\r\n\t\t\t\tbeforeImageData: !selectStart ? imageData : beforeImageData,\r\n\t\t\t\tselectStart: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisDrawing: isSelecting ? false : true,\r\n\t\t\t\tlastX: e.nativeEvent.offsetX,\r\n\t\t\t\tlastY: e.nativeEvent.offsetY,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseUpEvent = e => {\r\n\t\tif (this.props.isSelecting) {\r\n\t\t\tlet width = this.state.lastX - this.state.selectStartX;\r\n\t\t\tlet height = this.state.lastY - this.state.selectStartY;\r\n\t\t\tlet selectObject = {\r\n\t\t\t\tstartVector: new Vector2(this.state.selectStartX, this.state.selectStartY),\r\n\t\t\t\tendVector: new Vector2(this.state.lastX, this.state.lastY)\r\n\t\t\t}\r\n\t\t\tthis.props.updateSelectedObject(selectObject);\r\n\t\t\tthis.props.ctx.setLineDash([4, 4]);\r\n\t\t\tthis.props.ctx.putImageData(this.state.beforeImageData, 0, 0);\r\n\t\t\tthis.props.ctx.strokeRect(this.state.selectStartX, this.state.selectStartY, width, height);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tselectStartX: undefined,\r\n\t\t\t\tselectStartY: undefined,\r\n\t\t\t\tselectStart: false,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisDrawing: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseOutEvent = e => {\r\n\t\tthis.setState({\r\n\t\t\tisDrawing: false\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.resetCanvas) {\r\n\t\t\tthis.props.ctx.putImageData(this.state.beforeImageData, 0, 0);\r\n\t\t\tthis.props.resetCanvasActions(false);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"draw-container\">\r\n\t\t\t\t<div className=\"cursor\"></div>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tid=\"draw\"\r\n\t\t\t\t\tref={this.canvas} \r\n\t\t\t\t\tclassName=\"uk-width-1-1\"\r\n\t\t\t\t\tonMouseMove={this.onMouseMoveEvent.bind(this)}\r\n\t\t\t\t\tonMouseDown={this.onMouseDownEvent.bind(this)}\r\n\t\t\t\t\tonMouseUp={this.onMouseUpEvent.bind(this)}\r\n\t\t\t\t\tonMouseOut={this.onMouseOutEvent.bind(this)}\r\n\t\t\t\t\tonClick={this.onClickHandle.bind(this)}\r\n\t\t\t\t\t>\r\n\t\t\t\t</canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t\tthickness: state.penProperty.thickness,\r\n\t\tctx: state.canvasState.ctx,\r\n\t\tpipetteColor: state.penProperty.pipetteColor,\r\n\t\tpenType: state.canvasState.penType,\r\n\t\tisSelecting: state.canvasState.isSelecting,\r\n\t\tresetCanvas: state.canvasState.resetCanvas,\r\n\t\tselectedObject: state.canvasState.selectedObject\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tsetContext: setContext,\r\n\t\tchangeColor: changeColor,\r\n\t\tchangePipetteColor: changePipetteColor,\r\n\t\tchangeIsSelecting: changeIsSelecting,\r\n\t\tupdateSelectedObject: updateSelectedObject,\r\n\t\tresetCanvasActions: resetCanvasActions,\r\n\t\tresetSelectedObject: resetSelectedObject\r\n\t}, dispatch);\r\n}\r\n\r\nCanvas.propTypes = {\r\n\tcolor: PropTypes.string.isRequired,\r\n\tthickness: PropTypes.number.isRequired,\r\n\tsetContext: PropTypes.func.isRequired,\r\n\tctx: PropTypes.object.isRequired,\r\n\tchangeColor: PropTypes.func.isRequired,\r\n\tchangePipetteColor: PropTypes.func.isRequired,\r\n\tisSelecting: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","import React from 'react';\r\n\r\nconst DisplayError = () => (\r\n\t<div className=\"uk-container uk-margin-small-top\">\r\n\t\t<div className=\"uk-card uk-card-default uk-width-1-2@m\">\r\n\t\t\t<div className=\"uk-card-header\">\r\n\t\t\t\t<div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n\t\t\t\t  <div className=\"uk-width-expand uk-flex uk-flex-center\">\r\n\t\t\t\t\t\t<h3 className=\"uk-card-title uk-margin-remove-bottom\">Ваш браузер не поддерживается</h3>\r\n\t\t\t\t \t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"uk-card-body uk-flex uk-flex-center\">\r\n\t\t\t  <button \r\n\t\t\t  \tclassName=\"uk-button uk-button-danger uk-button-small\"\r\n\t\t\t  \tonClick={() => console.log(\"Больно же\")}\r\n\t\t\t  >Кинуть в faramo_zayw тапок</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nexport default DisplayError;","import React, { Component } from 'react';\r\nimport './../css/App.css';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport docCookies from 'doc-cookies';\r\n\r\nimport Panel from './Panel';\r\nimport Canvas from './Canvas';\r\nimport DisplayError from './DisplayError';\r\n\r\nimport { enableInfoModal }  from './../store/actions/infoModalActions';\r\n\r\nclass App extends Component {\r\n\tonUnload = (e) => {\r\n\t\tlet  { ctx } = this.props;\r\n\t\tlet autosave = docCookies.getItem(\"autosaveEnable\");\r\n\t\tautosave = JSON.parse(autosave);\r\n\t\tif (autosave) {\r\n\t\t\tlet saveImg = ctx.canvas.toDataURL('image/png');\r\n\t\t\tlet name = `Name: Несохраненный  рисунок`;\r\n\t\t\tlet date = `Date: ${Date.now()}`;\r\n\t\t\tlet imgSize = `Size: ${ctx.canvas.width} x ${ctx.canvas.height}`;\r\n\t\t\tlet key = name + date + imgSize;\r\n\t\t\tlocalStorage.setItem(`${key}`, saveImg);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\ttry {\r\n\t\t\tlet exist = docCookies.hasItem(\"firstLogin\");\r\n\t\t\tif (exist) {\r\n\t\t\t\tdocCookies.setItem(\"firstLogin\", \"false\")\r\n\t\t\t} else {\r\n\t\t\t\tdocCookies.setItem(\"firstLogin\", \"true\");\r\n\t\t\t\tdocCookies.setItem(\"autosaveEnable\", \"false\");\r\n\t\t\t\tthis.props.enableInfoModal();\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(`Failed with error: ${e}`);\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('beforeunload', this.onUnload);\r\n\t}\r\n\r\n\tcomponentDidUmmount() {\r\n\t\twindow.removeEventListener(\"beforeunload\", this.onUnload)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst app = !(window.innerWidth < 800) ? \r\n\t\t(\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Panel />\r\n\t\t\t\t<Canvas /> \r\n\t\t\t</div>\r\n\t\t) : <DisplayError />;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{app}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisOpen: state.infoModal.isOpen,\r\n\t\tctx: state.canvasState.ctx,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tenableInfoModal: enableInfoModal\r\n\t}, dispatch);\r\n}\r\n\r\nApp.propTypes = {\r\n\tisOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const penProperty = {\r\n\tcolor: '#000000',\r\n\tthickness: 1,\r\n\tpipetteColor: '#000000'\r\n}\r\n\r\nexport default penProperty;","const canvasState = {\r\n\tctx: {},\r\n\tpenType: 'pencil',\r\n\tisSelecting: false,\r\n\tresetCanvas: false,\r\n\tselectedObject: {}\r\n}\r\n\r\nexport default canvasState;\r\n\r\n/*\r\n\tpenType:\r\n\t\tpencil\r\n\t\tpipette\r\n\t\teraser\r\n\t\tpaint-bucket\r\n*/","const storageModal = {\r\n\tisOpen: false,\r\n\treRender: 0\r\n}\r\n\r\nexport default storageModal;\r\n","const infoModal = {\r\n\tisOpen: false,\r\n\treRender: 0\r\n}\r\n\r\nexport default infoModal;\r\n","import { combineReducers } from 'redux';\r\nimport penProperty from './store/reducers/penProperty.js';\r\nimport canvasStateReducer from './store/reducers/canvasStateReducer';\r\nimport modalStorageReducer from './store/reducers/modalStorageReducer';\r\nimport infoModalReducer from './store/reducers/infoModalReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\t\"penProperty\": penProperty,\r\n\t\"canvasState\": canvasStateReducer,\r\n\t\"modalStorage\": modalStorageReducer,\r\n\t\"infoModal\": infoModalReducer\r\n});\r\n\r\nexport default rootReducer;","import penProperty from './../data/penProperty';\r\n\r\nexport default (state = penProperty, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'CHANGE_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolor: action.payload\r\n\t\t\t}\r\n\t\tcase 'CHANGE_THICKNESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tthickness: Number(action.payload)\r\n\t\t\t}\r\n\t\tcase 'CHANGE_PIPETTE_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpipetteColor: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import canvasState from './../data/canvasState';\r\n\r\nexport default (state = canvasState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'SET_CONTEXT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tctx: action.payload\r\n\t\t\t}\r\n\t\tcase 'CHANGE_PEN_TYPE': \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresetCanvas: state.isSelecting && true,\r\n\t\t\t\tisSelecting: false,\r\n\t\t\t\tselectedObject: {},\r\n\t\t\t\tpenType: action.payload,\r\n\t\t\t}\r\n\t\tcase 'CHANGE_IS_SELECTING': \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpenType: action.payload ? 'none' : 'pencil',\r\n\t\t\t\tisSelecting: action.payload\r\n\t\t\t}\r\n\t\tcase 'RESET_CANVAS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresetCanvas: action.payload,\r\n\t\t\t\tpenType: 'pencil',\r\n\t\t\t\tisSelecting: false\r\n\t\t\t}\r\n\t\tcase 'RESET_SELECT_OBJECT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedObject: {}\r\n\t\t\t}\r\n\t\tcase 'UPDATE_SELECTED_OBJECT': \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedObject: Object.assign(action.payload)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import storageModal from './../data/storageModal';\r\n\r\nexport default (state = storageModal, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'ENABLE_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisOpen: true\r\n\t\t\t}\r\n\t\tcase 'DISABLE_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisOpen: false\r\n\t\t\t}\r\n\t\tcase 'RE_RENDER_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\treRender: Math.random()\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import infoModal from './../data/infoModal';\r\n\r\nexport default (state = infoModal, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'ENABLE_INFO_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\tisOpen: true\r\n\t\t\t}\r\n\t\tcase 'DISABLE_INFO_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\tisOpen: false\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport './css/index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcompose(\r\n\t\tapplyMiddleware(thunk), \r\n\t\tdevToolsEnhancer()\r\n\t)\r\n);\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}