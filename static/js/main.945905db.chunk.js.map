{"version":3,"sources":["store/actions/penActions.js","components/Panel/Thickness.jsx","components/Panel/ColorPicker.jsx","components/Panel/ClearButton.js","store/actions/canvasActions.js","components/Panel/SaveButton.jsx","components/Panel/Pipette.jsx","components/Panel/Pen.jsx","components/Panel/Eraser.jsx","components/Panel/UploadButton.jsx","components/Panel/FloodFill.jsx","components/Panel/Selection.jsx","components/Panel.jsx","modules/Tools.js","components/Canvas.jsx","components/DisplayError.jsx","components/App.js","serviceWorker.js","store/data/penProperty.js","store/data/canvasState.js","rootReducer.js","store/reducers/penProperty.js","store/reducers/canvasStateReducer.js","index.js"],"names":["changeColor","value","type","payload","changeThickness","changePipetteColor","Thickness","handleChange","event","_this","props","target","react_default","a","createElement","className","onChange","this","bind","Component","connect","state","thickness","penProperty","dispatch","bindActionCreators","ColorPicker","htmlFor","id","color","ClearButton","handleClick","ctx","clearRect","window","innerWidth","innerHeight","uk-icon","onClick","clear","canvasState","setContext","changePenType","changeIsSelecting","updateSelectedObject","resetCanvasActions","SaveButton","e","link","refs","isSelecting","href","document","querySelector","toDataURL","canvas","getContext","width","Math","abs","selectedObject","height","imageDate","getImageData","startX","startY","putImageData","download","ref","saveCanvasAsImg","Pipette","Pen","Eraser","UploadButton","uploadImgAsCanvas","confirm","alert","file","files","reader","FileReader","image","Image","onload","src","result","drawImage","readAsDataURL","FloodFill","Selection","Panel","uk-navbar","Panel_ColorPicker","Panel_Thickness","concat","penType","Panel_Pen","Panel_Pipette","Panel_Eraser","Panel_FloodFill","Panel_Selection","Panel_ClearButton","Panel_SaveButton","Panel_UploadButton","hexToRGB","hex","r","Number","parseInt","slice","g","b","Canvas","isDrawing","lastX","lastY","selectStartX","undefined","selectStartY","beforeImageData","selectStart","selectObject","getCanvas","getCanvasContext","getCursor","cursor","style","top","pageY","left","pageX","backgroundColor","pipetteColor","draw","lineWidth","beginPath","setLineDash","strokeStyle","moveTo","lineTo","nativeEvent","offsetX","offsetY","stroke","setState","pickColor","_ref","x","y","pix","data","join","floodFill","pixel","red","green","imageData","_ref2","_ref3","stack","blue","imgData","length","pop","pointColor","push","onClickHandle","selectingDraw","lineDashOffset","strokeRect","clientHeight","lineJoin","lineCap","rect","fillStyle","fill","_this2","resetCanvas","onMouseMove","onMouseDown","onMouseUp","onMouseOut","DisplayError","uk-grid","App","app","components_DisplayError","components_Panel","components_Canvas","Boolean","location","hostname","match","isDraging","rootReducer","combineReducers","arguments","action","Object","objectSpread","assign","store","createStore","compose","applyMiddleware","thunk","devToolsEnhancer","ReactDOM","render","es","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.945905db.chunk.js","sourcesContent":["export const changeColor = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_COLOR',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changeThickness = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_THICKNESS',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changePipetteColor = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_PIPETTE_COLOR',\r\n\t\tpayload: value\r\n\t}\r\n}","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changeThickness }  from './../../store/actions/penActions';\r\n\r\nclass Thickness extends Component {\r\n\thandleChange = event => this.props.changeThickness(event.target.value);\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<label>Толщина шрифта:\r\n\t\t\t\t\t<select \r\n\t\t\t\t\t\t\tclassName=\"uk-select\" \r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"1\">\r\n\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"2\">\r\n\t\t\t\t\t\t\t2\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"4\">\r\n\t\t\t\t\t\t\t4\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"8\">\r\n\t\t\t\t\t\t\t8\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"16\">\r\n\t\t\t\t\t\t\t16\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"32\">\r\n\t\t\t\t\t\t\t32\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"64\">\r\n\t\t\t\t\t\t\t64\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tthickness: state.penProperty.thickness\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangeThickness: changeThickness\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Thickness);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changeColor }  from './../../store/actions/penActions';\r\n\r\nclass ColorPicker extends Component {\r\n\thandleChange = event => this.props.changeColor(event.target.value);\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-flex uk-flex-column\">\r\n\t\t\t\t<label htmlFor=\"colorPicker\">Цвет:</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"color\" \r\n\t\t\t\t\tid=\"colorPicker\" \r\n\t\t\t\t\tonChange={this.handleChange.bind(this)} \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangeColor: changeColor\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ClearButton extends Component {\r\n\thandleClick = () => {\r\n\t\tthis.props.ctx.clearRect(0,0, window.innerWidth, window.innerHeight);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span \r\n\t\t\t\t\tid=\"clearButton\" \r\n\t\t\t\t\tclassName=\"uk-icon-link uk-icon-button\" \r\n\t\t\t\t\tuk-icon=\"trash\" \r\n\t\t\t\t\tonClick={this.handleClick.bind(this)}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tclear: state.canvasState.clear,\r\n\t\tctx: state.canvasState.ctx\r\n\t}\r\n}\r\n\r\nClearButton.propTypes = {\r\n\tctx: PropTypes.object,\r\n\tcanvas: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps)(ClearButton);","export const setContext = value => {\r\n\treturn {\r\n\t\ttype: 'SET_CONTEXT',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changePenType = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_PEN_TYPE',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changeIsSelecting = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_IS_SELECTING',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const changeIsDraging = value => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_IS_DRAGING',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const updateSelectedObject = value => {\r\n\treturn {\r\n\t\ttype: 'UPDATE_SELECTED_OBJECT',\r\n\t\tpayload: value\r\n\t}\r\n}\r\n\r\nexport const resetCanvasActions = value => {\r\n\treturn {\r\n\t\ttype: 'RESET_CANVAS',\r\n\t\tpayload: value\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { resetCanvasActions }  from './../../store/actions/canvasActions';\r\n\r\nclass SaveButton extends Component {\r\n\tasync saveCanvasAsImg(e) {\r\n\t\tlet link = this.refs.link;\r\n\t\tif (!this.props.isSelecting) {\r\n\t\t\tlink.href = document.querySelector('#draw').toDataURL('image/png');\r\n\t\t} else if (this.props.isSelecting) {\r\n\t\t\tawait this.props.resetCanvasActions(true);\r\n\t\t\tlet canvas = document.createElement('canvas');\r\n\t\t\tlet ctx = canvas.getContext('2d');\r\n\r\n\t\t\tcanvas.width = Math.abs(this.props.selectedObject.width);\r\n\t\t\tcanvas.height = Math.abs(this.props.selectedObject.height);\r\n\t\t\t\r\n\t\t\tlet imageDate = this.props.ctx.getImageData(\r\n\t\t\t\tthis.props.selectedObject.startX,\r\n\t\t\t\tthis.props.selectedObject.startY,\r\n\t\t\t\tthis.props.selectedObject.width,\r\n\t\t\t\tthis.props.selectedObject.height\r\n\t\t\t);\r\n\r\n\t\t\tlet link = this.refs.link;\r\n\t\t\tctx.putImageData(imageDate, 0, 0);\r\n\t\t\tlink.href = canvas.toDataURL('image/png');\r\n\t\t}\r\n\t\tlink.download = 'canvasImage.png';\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<a\r\n\t\t\t\t\tref=\"link\"\r\n\t\t\t\t\tid=\"saveButton\" \r\n\t\t\t\t\tclassName=\"uk-icon-link uk-icon-button\"\r\n\t\t\t\t\tuk-icon=\"download\"  \r\n\t\t\t\t\tonClick={this.saveCanvasAsImg.bind(this)}\r\n\t\t\t\t></a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx,\r\n\t\tisSelecting: state.canvasState.isSelecting,\r\n\t\tselectedObject: state.canvasState.selectedObject\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tresetCanvasActions: resetCanvasActions\r\n\t}, dispatch);\r\n}\r\n\r\nSaveButton.propTypes = {\r\n\tctx: PropTypes.object,\r\n\tisSelecting: PropTypes.bool.isRequired,\r\n\tselectedObject: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nclass Pipette extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span \r\n\t\t\t\t\tclassName=\"uk-icon uk-icon-button uk-icon-image pipette\" \r\n\t\t\t\t\tonClick={() => this.props.changePenType('pipette')}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nPipette.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pipette);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nclass Pen extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span \r\n\t\t\t\t\tclassName=\"uk-icon uk-icon-button\" \r\n\t\t\t\t\tuk-icon=\"pencil\" \r\n\t\t\t\t\tonClick={() => this.props.changePenType('pencil')}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nPen.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pen);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nclass Eraser extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span \r\n\t\t\t\t\tclassName=\"uk-icon uk-icon-button uk-icon-image eraser\" \r\n\t\t\t\t\tonClick={() => this.props.changePenType('eraser')}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nEraser.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Eraser);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass UploadButton extends Component {\r\n\tuploadImgAsCanvas = e => {\r\n\t\tif (window.confirm(\"При загрузке фото холст будет очищен, вы уверены?\")) {\r\n\t\t\talert(\"Да свершится предначертанное\");\r\n\t\t\tthis.props.ctx.clearRect(0,0, window.innerWidth, window.innerHeight);\r\n\r\n\t\t\tlet file = e.target.files[0];\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\tlet image = new Image();\r\n\r\n\t\t\treader.onload = e => {\r\n\t\t\t\timage.src = e.target.result\r\n\t\t\t\tthis.props.ctx.drawImage(image, 0, 0);\r\n\t\t\t};\r\n\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<label \r\n\t\t\t\t\thtmlFor=\"uploadButton\"\r\n\t\t\t\t\tclassName=\"uk-icon-link uk-icon-button\"\r\n\t\t\t\t\tuk-icon=\"upload\" \r\n\t\t\t\t></label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tref=\"link\"\r\n\t\t\t\t\tid=\"uploadButton\" \r\n\t\t\t\t\tclassName=\"uk-hidden\"\r\n\t\t\t\t\tonChange={this.uploadImgAsCanvas.bind(this)}\r\n\t\t\t\t></input>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctx: state.canvasState.ctx\r\n\t}\r\n}\r\n\r\nUploadButton.propTypes = {\r\n\tctx: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType }  from './../../store/actions/canvasActions';\r\n\r\nclass FloodFill extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span \r\n\t\t\t\t\tclassName=\"uk-icon uk-icon-button\" \r\n\t\t\t\t\tuk-icon=\"paint-bucket\" \r\n\t\t\t\t\tonClick={() => this.props.changePenType('paint-bucket')}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangePenType: changePenType\r\n\t}, dispatch);\r\n}\r\n\r\nFloodFill.propTypes = {\r\n\tchangePenType: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FloodFill);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux';\r\nimport { changePenType, changeIsSelecting }  from './../../store/actions/canvasActions';\r\n\r\nclass Selection extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-margin-small-top\">\r\n\t\t\t\t<span \r\n\t\t\t\t\tclassName=\"uk-icon uk-icon-button uk-icon-image selection\" \r\n\t\t\t\t\tonClick={() => this.props.changeIsSelecting(true)}\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tchangeIsSelecting: changeIsSelecting\r\n\t}, dispatch);\r\n}\r\n\r\nSelection.propTypes = {\r\n\tchangeIsSelecting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Thickness from './Panel/Thickness';\r\nimport ColorPicker from './Panel/ColorPicker';\r\nimport ClearButton from './Panel/ClearButton';\r\nimport SaveButton from './Panel/SaveButton';\r\nimport Pipette from './Panel/Pipette';\r\nimport Pen from './Panel/Pen';\r\nimport Eraser from './Panel/Eraser';\r\nimport UploadButton from './Panel/UploadButton'\r\nimport FloodFill from './Panel/FloodFill';\r\nimport Selection from './Panel/Selection';\r\n\r\nclass Panel extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<nav className=\"uk-navbar-container uk-flex uk-flex-center\" uk-navbar=\"true\">\r\n\t\t\t\t\t<div className=\"uk-navbar-left\">\r\n\t\t\t\t\t\t<ul className=\"uk-navbar-nav uk-flex uk-flex-row uk-flex-middle panel\">\r\n\t\t\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left uk-margin-right uk-flex uk-flex-middle\">\r\n\t\t\t\t\t\t\t\t<ColorPicker />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left uk-margin-right\">\r\n\t\t\t\t\t\t\t\t<Thickness />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${this.props.penType === 'pencil' && 'active'}`}>\r\n\t\t\t\t\t\t\t\t<Pen />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${this.props.penType === 'pipette' && 'active'}`}>\r\n\t\t\t\t\t\t\t\t<Pipette />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${this.props.penType === 'eraser' && 'active'}`}>\r\n\t\t\t\t\t\t\t\t<Eraser />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${this.props.penType === 'paint-bucket' && 'active'}`}>\r\n\t\t\t\t\t\t\t\t<FloodFill />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className={`uk-active uk-margin-top uk-margin-bottom uk-margin-left ${this.props.isSelecting && 'active'}`}>\r\n\t\t\t\t\t\t\t\t<Selection />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left\">\r\n\t\t\t\t\t\t\t\t<ClearButton />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left\">\r\n\t\t\t\t\t\t\t\t<SaveButton />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"uk-active uk-margin-top uk-margin-bottom uk-margin-left\">\r\n\t\t\t\t\t\t\t\t<UploadButton />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tpenType: state.canvasState.penType,\r\n\t\tisSelecting: state.canvasState.isSelecting\r\n\t}\r\n}\r\n\r\nPanel.propTypes = {\r\n\tpenType: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps)(Panel);","export const hexToRGB = hex => {\r\n\treturn {\r\n\t\tr: Number.parseInt(hex.slice(1, 3), 16),\r\n\t\tg: Number.parseInt(hex.slice(3, 5), 16),\r\n\t\tb: Number.parseInt(hex.slice(5, 7), 16),\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux';\r\nimport { \r\n\tsetContext, \r\n\tchangeIsSelecting, \r\n\tupdateSelectedObject, \r\n\tresetCanvasActions\r\n\t} from './../store/actions/canvasActions';\r\nimport { changeColor, changePipetteColor } from './../store/actions/penActions';\r\nimport { hexToRGB } from './../modules/Tools';\r\n\r\nclass Canvas extends Component {\r\n\tstate = {\r\n\t\tisDrawing: false,\r\n\t\tlastX: 0,\r\n\t\tlastY: 0,\r\n\t\tselectStartX: undefined,\r\n\t\tselectStartY: undefined,\r\n\t\tbeforeImageData: undefined,\r\n\t\tselectStart: false,\r\n\t\tselectObject: {}\r\n\t};\r\n\r\n\tgetCanvas = () => this.refs.canvas;\r\n\tgetCanvasContext = () => this.getCanvas().getContext('2d');\r\n\tgetCursor = () => document.querySelector('.cursor');\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst canvas = this.getCanvas();\r\n\t\tconst ctx = this.getCanvasContext();\r\n\r\n\t\tthis.props.setContext(ctx);\r\n\r\n\t\tcanvas.width = window.innerWidth;\r\n\t\tcanvas.height = window.innerHeight - document.querySelector('.uk-navbar-container').clientHeight;\r\n\r\n\t\tthis.setState({\r\n\t\t\tbeforeImageData: ctx.getImageData(0, 0, canvas.width, canvas.height)\r\n\t\t});\r\n\r\n\r\n\r\n\t\tctx.strokeStyle = this.props.color;\r\n\t\tctx.lineJoin = \"round\";\r\n\t\tctx.lineCap = \"round\";\r\n\t\tctx.lineWidth = this.props.thickness;\r\n\t\tctx.rect(0, 0, canvas.width, canvas.height);\r\n\t\tctx.fillStyle = '#ffffff';\r\n\t\tctx.fill()\r\n\t}\r\n\r\n\tcursor = e => {\r\n\t\tconst cursor = this.getCursor();\r\n\r\n\t\tcursor.style.width = `${this.props.thickness + 5}px`;\r\n\t\tcursor.style.height = `${this.props.thickness + 5}px`;\r\n\r\n\t\tcursor.style.top = `${e.pageY - Number.parseInt(cursor.style.height)/2}px`;\r\n\t\tcursor.style.left = `${e.pageX - Number.parseInt(cursor.style.width)/2}px`;\r\n\r\n\t\tif (this.props.penType === 'pencil' || this.props.penType === 'paint-bucket') {\r\n\t\t\tcursor.style.backgroundColor  = `${this.props.color}`;\r\n\t\t} else if (this.props.penType === 'pipette') {\r\n\t\t\tcursor.style.backgroundColor  = `${this.props.pipetteColor}`;\r\n\t\t} else if (this.props.penType === 'eraser') {\r\n\t\t\tcursor.style.backgroundColor = '#ffffff';\r\n\t\t}\r\n\t};\r\n\r\n\tdraw = e => {\r\n\t\tthis.cursor(e);\r\n\t\tthis.props.ctx.lineWidth = this.props.thickness;\r\n\t\tif (this.state.isDrawing && this.props.penType !== 'paint-bucket') {\r\n\t\t\tthis.props.ctx.beginPath();\r\n\t\t\tthis.props.ctx.setLineDash([0]);\r\n\r\n\t\t\tif (this.props.penType === 'pencil')\r\n\t\t\t\tthis.props.ctx.strokeStyle = this.props.color;\r\n\t\t\telse if (this.props.penType === 'pipette')\r\n\t\t\t\tthis.props.ctx.strokeStyle = this.props.pipetteColor;\r\n\t\t\telse if (this.props.penType === 'eraser')\r\n\t\t\t\tthis.props.ctx.strokeStyle = '#ffffff';\r\n\r\n\t\t\tthis.props.ctx.moveTo(this.state.lastX, this.state.lastY);\r\n\t\t\tthis.props.ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n\t\t\tthis.props.ctx.stroke();\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tlastX: e.nativeEvent.offsetX,\r\n\t\t\t\tlastY: e.nativeEvent.offsetY\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tpickColor = e => {\r\n\t\tconst [x, y] = [e.nativeEvent.offsetX, e.nativeEvent.offsetY];\r\n\t\r\n\t\tconst imgData = this.props.ctx.getImageData(x, y, 1, 1);\r\n\t\tconst pix = imgData.data;\r\n\t\tthis.props.changePipetteColor(`rgba(${pix.join(',')})`);\r\n\t};\r\n\r\n\tfloodFill = e => {\r\n\t\tlet color = hexToRGB(this.props.color);\r\n\t\tlet imageData = this.props.ctx.getImageData(0, 0, this.getCanvas().width, this.getCanvas().height);\r\n\t\tlet [width, height] = [imageData.width, imageData.height];\r\n\t\tlet [x, y] = [e.nativeEvent.offsetX, e.nativeEvent.offsetY];\r\n\t\t\r\n\t\tlet stack = [[x, y]];\r\n\t\tlet pixel;\r\n\t\tlet red, green, blue = 0;\r\n\r\n\t\tconst imgData = this.props.ctx.getImageData(x, y, 1, 1)\r\n\t\tconst backgroundColor = {\r\n\t\t\tr: imgData.data[0],\r\n\t\t\tg: imgData.data[1],\r\n\t\t\tb: imgData.data[2]\r\n\t\t}\r\n\r\n\t\twhile (stack.length > 0) {   \r\n\t\t\tpixel = stack.pop();\r\n\r\n\t\t\tif (pixel[0] < 0 || pixel[0] >= width) continue;\r\n\t\t\tif (pixel[1] < 0 || pixel[1] >= height) continue;\r\n\t\t\t\t\r\n\t\t\tred = pixel[1] * 4 * width + pixel[0] * 4;\r\n\t\t\tgreen = red + 1;\r\n\t\t\tblue = green + 1;\r\n\t\t\tconst pointColor = {\r\n\t\t\t\tr: imageData.data[red],\r\n\t\t\t\tg: imageData.data[green],\r\n\t\t\t\tb: imageData.data[blue]\r\n\t\t\t}\r\n\r\n\t\t\tif ((pointColor.r !== color.r || pointColor.g !== color.g || pointColor.b !== color.b)\r\n\t\t\t\t&& (pointColor.r === backgroundColor.r && pointColor.g === backgroundColor.g && pointColor.b === backgroundColor.b)) {\r\n\t\t\t\timageData.data[red] = color.r;\r\n\t\t\t\timageData.data[green] = color.g;\r\n\t\t\t\timageData.data[blue] = color.b;\r\n\t\t\t\t\r\n\t\t\t\tstack.push([\r\n\t\t\t\t\tpixel[0] - 1,\r\n\t\t\t\t\tpixel[1]\r\n\t\t\t\t  ]);\r\n\t\t\t\tstack.push([\r\n\t\t\t\t\tpixel[0] + 1,\r\n\t\t\t\t\tpixel[1]\r\n\t\t\t\t  ]);\r\n\t\t\t\tstack.push([\r\n\t\t\t\t\tpixel[0],\r\n\t\t\t\t\tpixel[1] - 1\r\n\t\t\t\t  ]);\r\n\t\t\t\tstack.push([\r\n\t\t\t\t\tpixel[0],\r\n\t\t\t\t\tpixel[1] + 1\r\n\t\t\t\t]);\r\n\t\t\t}\r\n    }\r\n\t\tthis.props.ctx.putImageData(imageData, 0, 0);\r\n\t};\r\n\r\n\tonClickHandle = e => {\r\n\t\tif (this.props.penType === 'pipette') this.pickColor(e);\r\n\t\telse if (this.props.penType === 'paint-bucket') this.floodFill(e);\r\n\t};\r\n\r\n\tselectingDraw = e => {\r\n\t\tthis.cursor(e)\r\n\t\tif (this.state.selectStart) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tlastX: e.nativeEvent.offsetX,\r\n\t\t\t\tlastY: e.nativeEvent.offsetY\r\n\t\t\t}, () => {\r\n\t\t\t\tlet width = this.state.lastX - this.state.selectStartX;\r\n\t\t\t\tlet height = this.state.lastY - this.state.selectStartY;\r\n\t\t\t\tthis.props.ctx.setLineDash([4, 4]);\r\n  \t\t\tthis.props.ctx.lineDashOffset = 0;\r\n\t\t\t\tthis.props.ctx.strokeRect(this.state.selectStartX, this.state.selectStartY, width, height);\r\n\t\t\t});\r\n\t\t\tthis.props.ctx.putImageData(this.state.beforeImageData, 0, 0);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.resetCanvas) {\r\n\t\t\tthis.props.ctx.putImageData(this.state.beforeImageData, 0, 0);\r\n\t\t\tthis.props.resetCanvasActions(false);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"draw-container\">\r\n\t\t\t\t<div className=\"cursor\"></div>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tid=\"draw\"\r\n\t\t\t\t\tref=\"canvas\" \r\n\t\t\t\t\tclassName=\"uk-width-1-1\"\r\n\r\n\t\t\t\t\tonMouseMove={e => {\r\n\t\t\t\t\t\tthis.props.isSelecting ? this.selectingDraw(e) : this.draw(e);\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\tonMouseDown={e => {\r\n\t\t\t\t\t\tlet canvas = this.getCanvas();\r\n\t\t\t\t\t\tlet imageData = this.props.ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\t\t\t\t\t\tif (this.props.isSelecting) {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tselectStartX: this.state.selectStartX === undefined ? e.nativeEvent.offsetX : this.state.selectStartX,\r\n\t\t\t\t\t\t\t\tselectStartY: this.state.selectStartY === undefined ? e.nativeEvent.offsetY : this.state.selectStartY,\r\n\t\t\t\t\t\t\t\tbeforeImageData: !this.state.selectStart ? imageData : this.state.beforeImageData,\r\n\t\t\t\t\t\t\t\tselectStart: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tisDrawing: this.state.isSelecting ? false : true,\r\n\t\t\t\t\t\t\t\tlastX: e.nativeEvent.offsetX,\r\n\t\t\t\t\t\t\t\tlastY: e.nativeEvent.offsetY,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\tonMouseUp={e => {\r\n\t\t\t\t\t\tif (this.props.isSelecting) {\r\n\t\t\t\t\t\t\tlet width = this.state.lastX - this.state.selectStartX;\r\n\t\t\t\t\t\t\tlet height = this.state.lastY - this.state.selectStartY;\r\n\t\t\t\t\t\t\tlet selectObject = {\r\n\t\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\t\theight: height,\r\n\t\t\t\t\t\t\t\tstartX: this.state.selectStartX,\r\n\t\t\t\t\t\t\t\tlastX: this.state.lastX,\r\n\t\t\t\t\t\t\t\tstartY: this.state.selectStartY,\r\n\t\t\t\t\t\t\t\tlastY: this.state.lastY,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.props.updateSelectedObject(selectObject);\r\n\t\t\t\t\t\t\tthis.props.ctx.setLineDash([4, 4]);\r\n\t\t\t\t\t\t\tthis.props.ctx.putImageData(this.state.beforeImageData, 0, 0);\r\n\t\t\t\t\t\t\tthis.props.ctx.strokeRect(this.state.selectStartX, this.state.selectStartY, width, height);\r\n\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tselectStartX: undefined,\r\n\t\t\t\t\t\t\t\tselectStartY: undefined,\r\n\t\t\t\t\t\t\t\tselectStart: false,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tisDrawing: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\tonMouseOut={e => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisDrawing: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\tonClick={this.onClickHandle.bind(this)}\r\n\t\t\t\t\t>\r\n\t\t\t\t</canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcolor: state.penProperty.color,\r\n\t\tthickness: state.penProperty.thickness,\r\n\t\tctx: state.canvasState.ctx,\r\n\t\tpipetteColor: state.penProperty.pipetteColor,\r\n\t\tpenType: state.canvasState.penType,\r\n\t\tisSelecting: state.canvasState.isSelecting,\r\n\t\tresetCanvas: state.canvasState.resetCanvas\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn bindActionCreators({\r\n\t\tsetContext: setContext,\r\n\t\tchangeColor: changeColor,\r\n\t\tchangePipetteColor: changePipetteColor,\r\n\t\tchangeIsSelecting: changeIsSelecting,\r\n\t\tupdateSelectedObject: updateSelectedObject,\r\n\t\tresetCanvasActions: resetCanvasActions\r\n\t}, dispatch);\r\n}\r\n\r\nCanvas.propTypes = {\r\n\tcolor: PropTypes.string.isRequired,\r\n\tthickness: PropTypes.number.isRequired,\r\n\tsetContext: PropTypes.func.isRequired,\r\n\tctx: PropTypes.object.isRequired,\r\n\tchangeColor: PropTypes.func.isRequired,\r\n\tchangePipetteColor: PropTypes.func.isRequired,\r\n\tisSelecting: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","import React from 'react';\r\n\r\nconst DisplayError = () => {\r\n\treturn(\r\n\t\t<div className=\"uk-container uk-margin-small-top\">\r\n\t\t\t<div className=\"uk-card uk-card-default uk-width-1-2@m\">\r\n\t\t\t\t<div className=\"uk-card-header\">\r\n\t\t\t\t\t<div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n\t\t\t\t\t  <div className=\"uk-width-expand uk-flex uk-flex-center\">\r\n\t\t\t\t\t\t\t<h3 className=\"uk-card-title uk-margin-remove-bottom\">Ваш браузер не поддерживается</h3>\r\n\t\t\t\t\t \t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"uk-card-body uk-flex uk-flex-center\">\r\n\t\t\t\t  <button className=\"uk-button uk-button-danger uk-button-small\">Кинуть в faramo_zayw тапок</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DisplayError;","import React, { Component } from 'react';\nimport './../css/App.css';\nimport Panel from './Panel';\nimport Canvas from './Canvas';\nimport DisplayError from './DisplayError';\n\nclass App extends Component {\n  render() {\n  \tconst app = !(window.innerWidth < 768) ? (<div className=\"App\">\n\t\t\t<Panel />\n\t\t\t<Canvas /> \n\t\t</div>) : <DisplayError />;\n\n    return (\n    \t<div>\n    \t\t{app}\n    \t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const penProperty = {\r\n\tcolor: '#000000',\r\n\tthickness: 1,\r\n\tpipetteColor: '#000000'\r\n}\r\n\r\nexport default penProperty;","const canvasState = {\r\n\tctx: {},\r\n\tpenType: 'pencil',\r\n\tisSelecting: false,\r\n\tisDraging: false,\r\n\tselectedObject: {},\r\n\tresetCanvas: false\r\n}\r\n\r\nexport default canvasState;\r\n\r\n/*\r\n\tpenType:\r\n\t\tpencil\r\n\t\tpipette\r\n\t\teraser\r\n\t\tpaint-bucket\r\n*/","import { combineReducers } from 'redux';\r\nimport penProperty from './store/reducers/penProperty.js';\r\nimport canvasStateReducer from './store/reducers/canvasStateReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\t\"penProperty\": penProperty,\r\n\t\"canvasState\": canvasStateReducer\r\n});\r\n\r\nexport default rootReducer;","import penProperty from './../data/penProperty';\r\n\r\nexport default (state = penProperty, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'CHANGE_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolor: action.payload\r\n\t\t\t}\r\n\t\tcase 'CHANGE_THICKNESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tthickness: Number(action.payload)\r\n\t\t\t}\r\n\t\tcase 'CHANGE_PIPETTE_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpipetteColor: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import canvasState from './../data/canvasState';\r\n\r\nexport default (state = canvasState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'SET_CONTEXT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tctx: action.payload\r\n\t\t\t}\r\n\t\tcase 'CHANGE_PEN_TYPE': \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpenType: action.payload,\r\n\t\t\t\tisSelecting: false\r\n\t\t\t}\r\n\t\tcase 'CHANGE_IS_SELECTING': \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpenType: action.payload ? 'none' : 'pencil',\r\n\t\t\t\tisSelecting: action.payload\r\n\t\t\t}\r\n\t\tcase 'CHANGE_IS_DRAGING': \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDraging: action.payload\r\n\t\t\t}\r\n\t\tcase 'UPDATE_SELECTED_OBJECT': \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedObject: Object.assign(action.payload)\r\n\t\t\t}\r\n\t\tcase 'RESET_CANVAS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresetCanvas: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport './css/index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcompose(\r\n\t\tapplyMiddleware(thunk), \r\n\t\tdevToolsEnhancer()\r\n\t)\r\n);\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}